/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,physical-layout = &default_layout; };
};

/ {
    behaviors {
        to_tap_layer: to_tap_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_TAP_LAYER";
            #binding-cells = <0>;
            bindings = <&none>, <&to 0>;
        };

        activate_bootloader: activate_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "ACTIVATE_BOOTLOADER";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        to_extra_layer: to_extra_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_EXTRA_LAYER";
            #binding-cells = <0>;
            bindings = <&none>, <&to 0>;
        };

        to_base_layer: to_base_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "TO_BASE_LAYER";
            #binding-cells = <0>;
            bindings = <&none>, <&to 0>;
        };

        sys_reset_double_tep: sys_reset_double_tep {
            compatible = "zmk,behavior-tap-dance";
            label = "SYS_RESET_DOUBLE_TEP";
            #binding-cells = <0>;
            bindings = <&none>, <&sys_reset>;
        };

        RGB_TOG_SHIFT_OFF: RGB_TOG_SHIFT_OFF {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_TOG_SHIFT_OFF";
            bindings = <&rgb_ug RGB_TOG>, <&rgb_ug RGB_OFF>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        RGB_NEXT_MODE_SHIFT_PREV: RGB_NEXT_MODE_SHIFT_PREV {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_NEXT_MODE_SHIFT_PREV";
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        RGB_HUE_UP_SHIFT_DOWN: RGB_HUE_UP_SHIFT_DOWN {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_HUE_UP_SHIFT_DOWN";
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        RGB_SAT_UP_SHIFT_DOWN: RGB_SAT_UP_SHIFT_DOWN {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_SAT_UP_SHIFT_DOWN";
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        RGB_BRI_UP_SHIFT_DOWN: RGB_BRI_UP_SHIFT_DOWN {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB_BRI_UP_SHIFT_DOWN";
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        EP_TOG_SHIFT_OFF: EP_TOG_SHIFT_OFF {
            compatible = "zmk,behavior-mod-morph";
            label = "EP_TOG_SHIFT_OFF";
            bindings = <&ext_power EP_TOG>, <&ext_power EP_OFF>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        OUT_TOG_SHIFT_USB: OUT_TOG_SHIFT_USB {
            compatible = "zmk,behavior-mod-morph";
            label = "OUT_TOG_SHIFT_USB";
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        BT_0_SHIFT_CLEAR: BT_0_SHIFT_CLEAR {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_0_SHIFT_CLEAR";
            bindings = <&bt BT_SEL 0>, <&SEL_AND_CLEAR_BT_MACRO 0>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        BT_1_SHIFT_CLEAR: BT_1_SHIFT_CLEAR {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_1_SHIFT_CLEAR";
            bindings = <&bt BT_SEL 1>, <&SEL_AND_CLEAR_BT_MACRO 1>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        BT_2_SHIFT_CLEAR: BT_2_SHIFT_CLEAR {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_2_SHIFT_CLEAR";
            bindings = <&bt BT_SEL 2>, <&SEL_AND_CLEAR_BT_MACRO 2>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        BT_3_SHIFT_CLEAR: BT_3_SHIFT_CLEAR {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_3_SHIFT_CLEAR";
            bindings = <&bt BT_SEL 3>, <&SEL_AND_CLEAR_BT_MACRO 3>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        TAP_KP_HOLD_TO_LAYER: TAP_KP_HOLD_TO_LAYER {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_KP_HOLD_TO_LAYER";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hrm_sticky: hrm_sticky {
            compatible = "zmk,behavior-sticky-key";
            label = "HRM_STICKY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        better_hold_tap: better_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BETTER_HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <150>;
            retro-tap;
        };
    };

    macros {
        SEL_AND_CLEAR_BT_MACRO: SEL_AND_CLEAR_BT_MACRO {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2 &bt BT_SEL MACRO_PLACEHOLDER &bt BT_CLR>;
            label = "SEL_AND_CLEAR_BT_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp TAB               &kp Q  &kp W  &kp F              &kp P           &kp B                   &trans  &trans  &kp J                     &kp L     &kp U                    &kp Y    &kp SQT   &kp DEL
&hrm_sticky LEFT_ALT  &kp A  &kp R  &kp S              &kp T           &kp G                   &trans  &trans  &kp M                     &kp N     &kp E                    &kp I    &kp O     &hrm_sticky LGUI
&hrm_sticky LSHFT     &kp Z  &kp X  &kp C              &kp D           &kp V                                   &kp K                     &kp H     &kp COMMA                &kp DOT  &kp FSLH  &sl 3
                                    &hrm_sticky LCTRL  &mt LGUI SPACE  &better_hold_tap 1 TAB                  &better_hold_tap 2 ENTER  &kp BSPC  &hrm_sticky RIGHT_SHIFT
            >;
        };

        lower {
            bindings = <
&trans  &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR      &kp PERCENT       &trans  &trans  &kp CARET          &kp AMPS         &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &kp N1     &kp N2     &kp N3     &kp N4          &kp N5            &trans  &trans  &kp N6             &kp N7           &kp N8     &kp N9                &kp N0                 &trans
&trans  &kp TILDE  &kp GRAVE  &kp COLON  &kp LEFT_BRACE  &kp LEFT_BRACKET                  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &trans     &trans                &trans                 &trans
                              &trans     &trans          &none                             &trans             &trans           &trans
            >;

            label = "lower";
        };

        Raise {
            bindings = <
&trans  &trans  &trans  &kp UNDERSCORE  &kp PLUS    &trans       &trans  &trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &trans
&trans  &trans  &trans  &kp MINUS       &kp EQUAL   &trans       &trans  &trans  &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &kp K_MENU        &trans
&trans  &trans  &trans  &kp SEMICOLON   &kp K_COPY  &kp K_PASTE                  &kp HOME    &kp PG_DN     &kp PG_UP     &kp END     &kp INS           &trans
                        &trans          &trans      &trans                       &none       &trans        &trans
            >;

            label = "Raise";
        };

        Function {
            bindings = <
&trans  &kp F1    &kp F2   &kp F3      &kp F4          &kp F5       &trans  &trans  &kp F6              &kp F7                     &kp F8                  &kp F9                  &kp F10                 &trans
&trans  &kp F11   &kp F12  &trans      &trans          &trans       &trans  &trans  &RGB_TOG_SHIFT_OFF  &RGB_NEXT_MODE_SHIFT_PREV  &RGB_HUE_UP_SHIFT_DOWN  &RGB_SAT_UP_SHIFT_DOWN  &RGB_BRI_UP_SHIFT_DOWN  &trans
&trans  &kp CAPS  &trans   &sys_reset  &studio_unlock  &bootloader                  &OUT_TOG_SHIFT_USB  &BT_0_SHIFT_CLEAR          &BT_1_SHIFT_CLEAR       &BT_2_SHIFT_CLEAR       &BT_3_SHIFT_CLEAR       &hrm_sticky LEFT_ALT
                           &trans      &trans          &trans                       &trans              &trans                     &trans
            >;

            label = "Function";
        };
    };
};
